<com.google.android.material.appbar.MaterialToolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:layout_constraintTop_toTopOf="parent"
            app:title="Profile"
            app:titleTextColor="@color/white"
            />


            <ProgressBar
                   android:visibility="gone"
                   android:id="@+id/pgBar"
                   android:layout_width="wrap_content"
                   android:layout_height="wrap_content"
                   app:layout_constraintTop_toTopOf="parent"
                   app:layout_constraintEnd_toEndOf="parent"
                   app:layout_constraintStart_toStartOf="parent"
                   app:layout_constraintBottom_toBottomOf="parent"
                   />




//    private fun loadQuestionByIndex() {
//
//        binding.pgBar.visibility = View.VISIBLE
//        val docId = "q$index"
//        db.collection(AppConstants.math)
//            .document(docId)
//            .get()
//            .addOnSuccessListener { doc ->
//                if (doc.exists()) {
//                    val question = doc.toObject(MathQuestion::class.java)
//                    question?.let {
//                        binding.question.text = "${it.operand1} _ ${it.operand2} = ${it.answer}"
////
////                        val animationZoomOut = AnimationUtils.loadAnimation(requireContext(), R.anim.move)
////                        view?.findViewById<TextView>(R.id.question)?.startAnimation(animationZoomOut)
//
//                        operator = it.operator
//                        operand1 = it.operand1.toString()
//                        operand2 = it.operand2.toString()
//                        answer = it.answer.toString()
//                    }
//                } else {
//                    binding.question.text = "Question $index not found"
//                }
//            }
//            .addOnFailureListener {
//                binding.question.text = "Error loading question $index"
//            }
//
//        binding.pgBar.visibility = View.GONE
//
//    }



//        fetchUserData(getUserId(context).toString(),context)
//        val userData = getUser(context)
//        if (userData != null) {

//             var games = if(userData.totalGames> 0) userData.totalGames else 1
//            var winRate = ((userData.totalWins.toDouble() / games.toDouble()) * 100).toInt()
//            var playTime = userData.playTime.toLong() + time
//            var winStreak = if (win) userData.winStreak + 1 else 0
//
//            var list = arrayListOf<UserResponse.GameHistory>()
//
//            list.addAll(userData.gameHistory)
//
//            var item = list.find { it.gameId == id }
//
//            if (item != null) {
//                // Update score if higher
//                if (item.bestScore < score) {
//                    item.bestScore = score
//                }
//            } else {
//                // Add new game entry if not found
//                list.add(UserResponse.GameHistory(gameId = id, bestScore = score,_id= ""))
//            }
//            item?.bestScore?.toInt()?.let {
//                if(it < score) {
//                        item.bestScore = score.toString()
//                }
//            }

//            var bestScore = 0

//
////            getting best score from list
//            for(i in list) {
//                if(i.gameId == id) {
////                    binding.bestScore.text = i.bestScore.toString()
//
//                    if(i.bestScore < score) {
//                        bestScore = score
//                    } else {
//                        bestScore = i.bestScore
//                    }
//                    Log.d("Best Score",i.bestScore.toString())
//                }
//            }


